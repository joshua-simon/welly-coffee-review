{"ast":null,"code":"import _slicedToArray from\"C:/Users/Josh/Desktop/mocha-welly-v2/cra-plus-express/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import axios from'axios';import Review from'./Review';import CafeHeader from'./CafeHeader';import Main from'./Main';import{averageStarRating}from'../helperFunctions';var CafeReviews=function CafeReviews(_ref){var match=_ref.match;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),cafe=_useState2[0],setCafe=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),reviews=_useState4[0],setReviews=_useState4[1];useEffect(function(){axios.get(\"/api/cafe/\".concat(match.params.id)).then(function(result){setCafe(result.data);});axios.get('/api/all-reviews').then(function(review){setReviews(review.data);}).catch(function(err){console.log(err);});},[]);var filteredReviews=reviews.filter(function(review){return review.cafeName===cafe.cafeName;});var okFineDontWork=averageStarRating(filteredReviews);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Link,{to:'/',style:{textDecoration:\"none\",color:\"#686262\"},children:/*#__PURE__*/_jsx(\"h3\",{children:\"Home\"})}),/*#__PURE__*/_jsx(CafeHeader,{cafe:cafe,thing:okFineDontWork}),/*#__PURE__*/_jsx(\"div\",{className:\"reviews-container\",children:/*#__PURE__*/_jsx(Review,{reviews:filteredReviews})})]})});};export default CafeReviews;","map":{"version":3,"sources":["C:/Users/Josh/Desktop/mocha-welly-v2/cra-plus-express/client/src/components/CafeReviews.jsx"],"names":["React","useState","useEffect","Link","axios","Review","CafeHeader","Main","averageStarRating","CafeReviews","match","cafe","setCafe","reviews","setReviews","get","params","id","then","result","data","review","catch","err","console","log","filteredReviews","filter","cafeName","okFineDontWork","textDecoration","color"],"mappings":"gUAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAwBC,SAAxB,KAAwC,OAAxC,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,OAAQC,iBAAR,KAAgC,oBAAhC,CAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,eACTT,QAAQ,CAAC,EAAD,CADC,wCAC1BU,IAD0B,eACpBC,OADoB,8BAEHX,QAAQ,CAAC,EAAD,CAFL,yCAE1BY,OAF0B,eAEjBC,UAFiB,eAIjCZ,SAAS,CAAC,UAAM,CACdE,KAAK,CAACW,GAAN,qBAAuBL,KAAK,CAACM,MAAN,CAAaC,EAApC,GAA0CC,IAA1C,CAA+C,SAACC,MAAD,CAAY,CACzDP,OAAO,CAACO,MAAM,CAACC,IAAR,CAAP,CACD,CAFD,EAGAhB,KAAK,CAACW,GAAN,CAAU,kBAAV,EACGG,IADH,CACQ,SAACG,MAAD,CAAY,CAChBP,UAAU,CAACO,MAAM,CAACD,IAAR,CAAV,CACD,CAHH,EAIGE,KAJH,CAIS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACD,CANH,EAOD,CAXQ,CAWN,EAXM,CAAT,CAaA,GAAIG,CAAAA,eAAe,CAAGb,OAAO,CAACc,MAAR,CAAe,SAACN,MAAD,CAAY,CAC/C,MAAOA,CAAAA,MAAM,CAACO,QAAP,GAAoBjB,IAAI,CAACiB,QAAhC,CACD,CAFqB,CAAtB,CAIC,GAAIC,CAAAA,cAAc,CAAIrB,iBAAiB,CAACkB,eAAD,CAAvC,CAED,mBACI,sCACF,oCACE,KAAC,IAAD,EAAM,EAAE,CAAI,GAAZ,CACA,KAAK,CAAE,CAAEI,cAAc,CAAE,MAAlB,CAA0BC,KAAK,CAAE,SAAjC,CADP,uBAGA,4BAHA,EADF,cAME,KAAC,UAAD,EAAY,IAAI,CAAEpB,IAAlB,CAAwB,KAAK,CAAGkB,cAAhC,EANF,cAOE,YAAK,SAAS,CAAC,mBAAf,uBACA,KAAC,MAAD,EAAQ,OAAO,CAAEH,eAAjB,EADA,EAPF,GADE,EADJ,CAeD,CAtCD,CAwCA,cAAejB,CAAAA,WAAf","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Review from './Review'\r\nimport CafeHeader from './CafeHeader'\r\nimport Main from './Main'\r\nimport {averageStarRating} from '../helperFunctions'\r\n\r\n\r\nconst CafeReviews = ({ match }) => {\r\n  const [cafe, setCafe] = useState([]);\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/cafe/${match.params.id}`).then((result) => {\r\n      setCafe(result.data);\r\n    })\r\n    axios.get('/api/all-reviews')\r\n      .then((review) => {\r\n        setReviews(review.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }, [])\r\n\r\n  let filteredReviews = reviews.filter((review) => {\r\n    return review.cafeName === cafe.cafeName;\r\n  })\r\n\r\n   let okFineDontWork = (averageStarRating(filteredReviews))\r\n  \r\n  return (\r\n      <>\r\n    <div>\r\n      <Link to = {'/'}\r\n      style={{ textDecoration: \"none\", color: \"#686262\" }}\r\n      >\r\n      <h3>Home</h3>\r\n      </Link>\r\n      <CafeHeader cafe={cafe} thing ={okFineDontWork}/>\r\n      <div className=\"reviews-container\">\r\n      <Review reviews={filteredReviews}/>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CafeReviews"]},"metadata":{},"sourceType":"module"}