{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\mocha-welly-v2\\\\cra-plus-express\\\\client\\\\src\\\\helperFunctions.js\";\nexport const convertToStars = stars => {\n  const num = parseInt(stars);\n\n  const star = /*#__PURE__*/_jsxDEV(\"i\", {\n    children: \"\\u2605\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 18\n  }, this);\n\n  const arr = [];\n\n  for (let i = 0; i <= num; i++) {\n    if (arr.length < num) {\n      arr.push(star);\n    }\n  }\n\n  return arr;\n};\nlet arr = reviews.map(item => parseInt(item.stars));\nconsole.log(arr);\nlet total = arr.reduce((x, y) => x + y);\nconsole.log(`this is the total ${total}`);\nlet average = total / reviews.length;\nconsole.log(`this is the average ${average}`);\nlet roundedAverage = Math.round(average);\nconsole.log(`this is the rounded average ${roundedAverage}`);\nlet averageStars = convertToStars(roundedAverage);\nconst {\n  title,\n  userName,\n  blurb,\n  stars,\n  _id\n} = review;\nconst starRating = convertToStars(stars);","map":{"version":3,"sources":["C:/Users/Josh/Desktop/mocha-welly-v2/cra-plus-express/client/src/helperFunctions.js"],"names":["convertToStars","stars","num","parseInt","star","arr","i","length","push","reviews","map","item","console","log","total","reduce","x","y","average","roundedAverage","Math","round","averageStars","title","userName","blurb","_id","review","starRating"],"mappings":";;AAAA,OAAO,MAAMA,cAAc,GAAIC,KAAD,IAAW;AACrC,QAAMC,GAAG,GAAGC,QAAQ,CAACF,KAAD,CAApB;;AACA,QAAMG,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;;AACA,QAAMC,GAAG,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,GAArB,EAA0BI,CAAC,EAA3B,EAA+B;AAC7B,QAAID,GAAG,CAACE,MAAJ,GAAaL,GAAjB,EAAsB;AACpBG,MAAAA,GAAG,CAACG,IAAJ,CAASJ,IAAT;AACD;AACF;;AACD,SAAOC,GAAP;AACD,CAVI;AAYL,IAAIA,GAAG,GAAGI,OAAO,CAACC,GAAR,CAAYC,IAAI,IAAIR,QAAQ,CAACQ,IAAI,CAACV,KAAN,CAA5B,CAAV;AACAW,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACA,IAAIS,KAAK,GAAGT,GAAG,CAACU,MAAJ,CAAW,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,GAACC,CAAtB,CAAZ;AACAL,OAAO,CAACC,GAAR,CAAa,qBAAoBC,KAAM,EAAvC;AACA,IAAII,OAAO,GAAGJ,KAAK,GAACL,OAAO,CAACF,MAA5B;AACAK,OAAO,CAACC,GAAR,CAAa,uBAAsBK,OAAQ,EAA3C;AACA,IAAIC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAX,CAArB;AACAN,OAAO,CAACC,GAAR,CAAa,+BAA8BM,cAAe,EAA1D;AACA,IAAIG,YAAY,GAAGtB,cAAc,CAACmB,cAAD,CAAjC;AACA,MAAM;AAAEI,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,KAAnB;AAA0BxB,EAAAA,KAA1B;AAAiCyB,EAAAA;AAAjC,IAAyCC,MAA/C;AACA,MAAMC,UAAU,GAAG5B,cAAc,CAACC,KAAD,CAAjC","sourcesContent":["export const convertToStars = (stars) => {\r\n    const num = parseInt(stars);\r\n    const star = <i>â˜…</i>;\r\n    const arr = [];\r\n    for (let i = 0; i <= num; i++) {\r\n      if (arr.length < num) {\r\n        arr.push(star);\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  let arr = reviews.map(item => parseInt(item.stars))\r\n  console.log(arr)\r\n  let total = arr.reduce((x,y) => x+y)\r\n  console.log(`this is the total ${total}`)\r\n  let average = total/reviews.length\r\n  console.log(`this is the average ${average}`)\r\n  let roundedAverage = Math.round(average)\r\n  console.log(`this is the rounded average ${roundedAverage}`)\r\n  let averageStars = convertToStars(roundedAverage)\r\n  const { title, userName, blurb, stars, _id } = review;\r\n  const starRating = convertToStars(stars)"]},"metadata":{},"sourceType":"module"}