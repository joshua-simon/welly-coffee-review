{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Josh\\\\Desktop\\\\mocha-welly-v2\\\\cra-plus-express\\\\client\\\\src\\\\helperFunctions.js\";\nexport const convertToStars = stars => {\n  const num = parseInt(stars);\n\n  const star = /*#__PURE__*/_jsxDEV(\"i\", {\n    children: \"\\u2605\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 18\n  }, this);\n\n  const arr = [];\n\n  for (let i = 0; i <= num; i++) {\n    if (arr.length < num) {\n      arr.push(star);\n    }\n  }\n\n  return arr;\n};\n\nconst averageStarRating = data => {\n  let arr = data.map(item => parseInt(item.stars));\n  let total = arr.reduce((x, y) => x + y);\n}; //   let arr = reviews.map(item => parseInt(item.stars))\n//   console.log(arr)\n//   let total = arr.reduce((x,y) => x+y)\n//   console.log(`this is the total ${total}`)\n//   let average = total/reviews.length\n//   console.log(`this is the average ${average}`)\n//   let roundedAverage = Math.round(average)\n//   console.log(`this is the rounded average ${roundedAverage}`)\n//   let averageStars = convertToStars(roundedAverage)\n//   const { title, userName, blurb, stars, _id } = review;\n//   const starRating = convertToStars(stars)","map":{"version":3,"sources":["C:/Users/Josh/Desktop/mocha-welly-v2/cra-plus-express/client/src/helperFunctions.js"],"names":["convertToStars","stars","num","parseInt","star","arr","i","length","push","averageStarRating","data","map","item","total","reduce","x","y"],"mappings":";;AAAA,OAAO,MAAMA,cAAc,GAAIC,KAAD,IAAW;AACrC,QAAMC,GAAG,GAAGC,QAAQ,CAACF,KAAD,CAApB;;AACA,QAAMG,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;;AACA,QAAMC,GAAG,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,GAArB,EAA0BI,CAAC,EAA3B,EAA+B;AAC7B,QAAID,GAAG,CAACE,MAAJ,GAAaL,GAAjB,EAAsB;AACpBG,MAAAA,GAAG,CAACG,IAAJ,CAASJ,IAAT;AACD;AACF;;AACD,SAAOC,GAAP;AACD,CAVI;;AAcL,MAAMI,iBAAiB,GAAIC,IAAD,IAAU;AAClC,MAAIL,GAAG,GAAGK,IAAI,CAACC,GAAL,CAASC,IAAI,IAAIT,QAAQ,CAACS,IAAI,CAACX,KAAN,CAAzB,CAAV;AACA,MAAIY,KAAK,GAAGR,GAAG,CAACS,MAAJ,CAAW,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,GAACC,CAAtB,CAAZ;AACD,CAHD,C,CAIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const convertToStars = (stars) => {\r\n    const num = parseInt(stars);\r\n    const star = <i>â˜…</i>;\r\n    const arr = [];\r\n    for (let i = 0; i <= num; i++) {\r\n      if (arr.length < num) {\r\n        arr.push(star);\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n\r\n\r\n\r\n  const averageStarRating = (data) => {\r\n    let arr = data.map(item => parseInt(item.stars))\r\n    let total = arr.reduce((x,y) => x+y)\r\n  }\r\n//   let arr = reviews.map(item => parseInt(item.stars))\r\n//   console.log(arr)\r\n//   let total = arr.reduce((x,y) => x+y)\r\n//   console.log(`this is the total ${total}`)\r\n//   let average = total/reviews.length\r\n//   console.log(`this is the average ${average}`)\r\n//   let roundedAverage = Math.round(average)\r\n//   console.log(`this is the rounded average ${roundedAverage}`)\r\n//   let averageStars = convertToStars(roundedAverage)\r\n//   const { title, userName, blurb, stars, _id } = review;\r\n//   const starRating = convertToStars(stars)"]},"metadata":{},"sourceType":"module"}